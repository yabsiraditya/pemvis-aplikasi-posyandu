/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectposyandu;

import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import koneksi.koneksi;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRResultSetDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.swing.JRViewer;
import net.sf.jasperreports.view.JasperViewer;
import org.icepdf.ri.common.ComponentKeyBinding;
import org.icepdf.ri.common.SwingController;
import org.icepdf.ri.common.SwingViewBuilder;

/**
 *
 * @author PREDATOR
 */
public class ReportT extends javax.swing.JPanel {
    private String kategori;
    /**
     * Creates new form ReportD
     */
    public ReportT() {
        initComponents();
        start();
    }
    protected void start(){
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        C_selection = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        PB_balita = new javax.swing.JPanel();
        BP_balita = new javax.swing.JButton();
        P_balita = new javax.swing.JButton();
        Pan_R = new javax.swing.JPanel();
        JS_utama = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();

        setMinimumSize(new java.awt.Dimension(1920, 1959));
        setPreferredSize(new java.awt.Dimension(1920, 1959));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 153, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        C_selection.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        C_selection.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Data", "Pemeriksaan", "Pembayaran" }));
        C_selection.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        C_selection.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                C_selectionActionPerformed(evt);
            }
        });
        jPanel1.add(C_selection, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, 260, -1));

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Laporan Transaksi");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 190, 40));

        PB_balita.setBackground(new java.awt.Color(255, 255, 255));
        PB_balita.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        BP_balita.setBackground(new java.awt.Color(255, 255, 255));
        BP_balita.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        BP_balita.setForeground(new java.awt.Color(51, 204, 255));
        BP_balita.setText("Print");
        BP_balita.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 204, 255)));
        BP_balita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BP_balitaActionPerformed(evt);
            }
        });
        PB_balita.add(BP_balita, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 10, 160, 40));

        P_balita.setText("Preview");
        P_balita.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                P_balitaActionPerformed(evt);
            }
        });
        PB_balita.add(P_balita, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 160, 40));

        jPanel1.add(PB_balita, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 90, 260, 130));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 310, 990));

        Pan_R.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        Pan_R.add(JS_utama, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 920));

        add(Pan_R, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 60, 1300, -1));

        jPanel3.setBackground(new java.awt.Color(51, 153, 255));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1550, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 60, Short.MAX_VALUE)
        );

        add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 0, 1550, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void BP_balitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BP_balitaActionPerformed
        Integer cb = C_selection.getSelectedIndex();
        String jdbc_driver = "com.mysql.jdbc.Driver";
        String user = "root";
        String pass = "";
        String url = "jdbc:mysql://localhost:3306/posyandu3";
        File reportFile = new File(".");
        String dirr = "";
        
        if(cb == 1){
            try {
            Class.forName(jdbc_driver);
            Connection cone = DriverManager.getConnection(url, user, pass);
            Statement stat = cone.createStatement();
            String sql = "SELECT pemeriksaan.kdpemeriksaan, pemeriksaan.kdbalita, pemeriksaan.kdbidan, pemeriksaan.kdpembayaran, pemeriksaan.keterangan, pemeriksaan.tpemeriksaan, pemeriksaan.harga, pemeriksaan.umur, pemeriksaan.berat_badan, pemeriksaan.tinggi_badan, pemeriksaan.status_panjang, pemeriksaan.status_gizi, pemeriksaan.status_berat, pemeriksaan.pemberian_obat_vitamin, jenis_pemeriksaan.jenis_pemeriksaan AS jenis_pemeriksaan FROM pemeriksaan JOIN jenis_pemeriksaan ON pemeriksaan.jenpemeriksaan = jenis_pemeriksaan.id_pemeriksaan;" +
"";;
            dirr = reportFile.getCanonicalPath() + "/src/projectposyandu/";
            JasperDesign design = JRXmlLoader.load(dirr + "pemeriksaan.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(design);
            ResultSet rs = stat.executeQuery(sql);
            JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
            JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap(), rsDataSource);
                          JFrame frame = new JFrame("Report");
            frame.getContentPane().add(new net.sf.jasperreports.view.JRViewer(jp));
            frame.pack();
            frame.setVisible(true);

        } catch (ClassNotFoundException | SQLException | IOException | JRException ex) {
            JOptionPane.showMessageDialog(null, "\nGagal Mencetak\n" + ex,
                "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        }else if(cb == 2){
            try {
            Class.forName(jdbc_driver);
            Connection cone = DriverManager.getConnection(url, user, pass);
            Statement stat = cone.createStatement();
            String sql = "SELECT\n" +
"     pembayaran.`kdpembayaran` AS pembayaran_kdpembayaran,\n" +
"     pembayaran.`tgl_bayar` AS pembayaran_tgl_bayar,\n" +
"     pembayaran.`total_bayar` AS pembayaran_total_bayar,\n" +
"     pembayaran.`bayar` AS pembayaran_bayar,\n" +
"     pembayaran.`kembalian` AS pembayaran_kembalian,\n" +
"     pembayaran.`id_transaksi` AS pembayaran_id_transaksi\n" +
"FROM\n" +
"     `pembayaran` pembayaran";
            dirr = reportFile.getCanonicalPath() + "/src/projectposyandu/";
            JasperDesign design = JRXmlLoader.load(dirr + "pembayaran.jrxml");
            JasperReport jr = JasperCompileManager.compileReport(design);
            ResultSet rs = stat.executeQuery(sql);
            JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
            JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap(), rsDataSource);
                         JFrame frame = new JFrame("Report");
            frame.getContentPane().add(new net.sf.jasperreports.view.JRViewer(jp));
            frame.pack();
            frame.setVisible(true);

        } catch (ClassNotFoundException | SQLException | IOException | JRException ex) {
            JOptionPane.showMessageDialog(null, "\nGagal Mencetak\n" + ex,
                "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        }    
        
        
    }//GEN-LAST:event_BP_balitaActionPerformed

    private void C_selectionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_C_selectionActionPerformed
     
    }//GEN-LAST:event_C_selectionActionPerformed

    private void P_balitaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_P_balitaActionPerformed
     Integer cb = C_selection.getSelectedIndex();
      JasperReport report;
        String jdbc_driver = "com.mysql.jdbc.Driver";
        String user = "root";
        String pass = "";
        String url = "jdbc:mysql://localhost/posyandu3";   
              File reportFile = new File(".");
       String dirr = "";
       
        if (cb == 1) {

        try {
        Class.forName(jdbc_driver);
        Connection cone = DriverManager.getConnection(url, user, pass);
        Statement stat = cone.createStatement();
        String sql = "SELECT pemeriksaan.kdpemeriksaan, pemeriksaan.kdbalita, pemeriksaan.kdbidan, pemeriksaan.kdpembayaran, pemeriksaan.keterangan, pemeriksaan.tpemeriksaan, pemeriksaan.harga, pemeriksaan.umur, pemeriksaan.berat_badan, pemeriksaan.tinggi_badan, pemeriksaan.status_panjang, pemeriksaan.status_gizi, pemeriksaan.status_berat, pemeriksaan.pemberian_obat_vitamin, jenis_pemeriksaan.jenis_pemeriksaan AS jenis_pemeriksaan FROM pemeriksaan JOIN jenis_pemeriksaan ON pemeriksaan.jenpemeriksaan = jenis_pemeriksaan.id_pemeriksaan;" +
"";
        dirr = reportFile.getCanonicalPath() + "/src/projectposyandu/";
        JasperDesign design = JRXmlLoader.load(dirr + "pemeriksaan.jrxml");
        JasperReport jr = JasperCompileManager.compileReport(design);
        ResultSet rs = stat.executeQuery(sql);
        JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
        JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap(), rsDataSource);
            net.sf.jasperreports.view.JRViewer viewer = new net.sf.jasperreports.view.JRViewer(jp);
            SwingController control=new SwingController();
            SwingViewBuilder factry=new SwingViewBuilder(control);
            JPanel viewerCompntpnl=factry.buildViewerPanel();
            ComponentKeyBinding.install(control, viewerCompntpnl);
              JS_utama.setViewportView(viewerCompntpnl); 
              viewerCompntpnl.add(new net.sf.jasperreports.view.JRViewer(jp));
            
        } catch (JRException ex) {
            Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
         Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
     } catch (IOException ex) {
         Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
     }
      
       }else if(cb == 2){
           try {
        Class.forName(jdbc_driver);
        Connection cone = DriverManager.getConnection(url, user, pass);
        Statement stat = cone.createStatement();
        String sql = "SELECT\n" +
"     pembayaran.`kdpembayaran` AS pembayaran_kdpembayaran,\n" +
"     pembayaran.`tgl_bayar` AS pembayaran_tgl_bayar,\n" +
"     pembayaran.`total_bayar` AS pembayaran_total_bayar,\n" +
"     pembayaran.`bayar` AS pembayaran_bayar,\n" +
"     pembayaran.`kembalian` AS pembayaran_kembalian,\n" +
"     pembayaran.`id_transaksi` AS pembayaran_id_transaksi\n" +
"FROM\n" +
"     `pembayaran` pembayaran";
        dirr = reportFile.getCanonicalPath() + "/src/projectposyandu/";
        JasperDesign design = JRXmlLoader.load(dirr + "pembayaran.jrxml");
        JasperReport jr = JasperCompileManager.compileReport(design);
        ResultSet rs = stat.executeQuery(sql);
        JRResultSetDataSource rsDataSource = new JRResultSetDataSource(rs);
        JasperPrint jp = JasperFillManager.fillReport(jr, new HashMap(), rsDataSource);
            net.sf.jasperreports.view.JRViewer viewer = new net.sf.jasperreports.view.JRViewer(jp);
            SwingController control=new SwingController();
            SwingViewBuilder factry=new SwingViewBuilder(control);
            JPanel viewerCompntpnl=factry.buildViewerPanel();
            ComponentKeyBinding.install(control, viewerCompntpnl);
              JS_utama.setViewportView(viewerCompntpnl); 
              viewerCompntpnl.add(new net.sf.jasperreports.view.JRViewer(jp));
            
        } catch (JRException ex) {
            Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
         Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
     } catch (SQLException ex) {
         Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
     } catch (IOException ex) {
         Logger.getLogger(ReportT.class.getName()).log(Level.SEVERE, null, ex);
     }
      
       }
    }//GEN-LAST:event_P_balitaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BP_balita;
    private javax.swing.JComboBox<String> C_selection;
    private javax.swing.JScrollPane JS_utama;
    private javax.swing.JPanel PB_balita;
    private javax.swing.JButton P_balita;
    private javax.swing.JPanel Pan_R;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    // End of variables declaration//GEN-END:variables
}
