/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package projectposyandu;
import java.awt.Color;
import java.awt.Font;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.util.Locale;
import java.util.Date;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableCellRenderer;
import koneksi.koneksi;
/**
 *
 * @author Asus
 */
public class kader extends javax.swing.JPanel {
    private Connection conn = new koneksi().connect();
    private DefaultTableModel tabmode;
    /**
     * Creates new form kaderis
     */
    public kader() {
        initComponents();
        kosong();
        aktif();
        datatable();
        setBackground(new Color(0,0,0,0));
         DefaultTableCellRenderer head_render = new DefaultTableCellRenderer(); 
        head_render.setBackground(new Color(32, 136, 203));
        table_kader.getTableHeader().setOpaque(false);
        table_kader.getTableHeader().setDefaultRenderer(head_render);
        table_kader.getTableHeader().setForeground(new Color(255,255,255));
        table_kader.setRowHeight(25);
    }
    
    protected void aktif(){
        k_id.requestFocus();
    }
    protected void kosong(){
        k_id.setText("");
        k_nik.setText("");
        k_nama.setText("");
        k_tl.setCalendar(null);
        k_telp.setText("");
        raktif.setSelected(false);
        rtidak.setSelected(false);
    }
    
    protected void datatable(){
        Object[] Baris = {"ID","NIK","Nama", "Tanggal Lahir", "No Telepon", "Status"};
        tabmode = new DefaultTableModel (null, Baris);
        
         String findItem = tcari_kader.getText();
         try{
            String sql = "SELECT * FROM kader where kd_kader like '%"+findItem+ "%' or nik like '%" + findItem + "%' or nama like '%" + findItem + "%' order by kd_kader asc";
            Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                tabmode.addRow(new Object[]{
                    hasil.getString(1),
                    hasil.getString(2),
                    hasil.getString(3),
                    hasil.getString(4),
                    hasil.getString(5),
                    hasil.getString(6)
                
                });
            }
            table_kader.setModel(tabmode); 
        }catch (Exception e){
             JOptionPane.showMessageDialog(null,"datatable gagal "+e);
           }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainpanel = new javax.swing.JPanel();
        dataKader = new javax.swing.JPanel();
        tcari_kader = new javax.swing.JTextField();
        label_kader = new javax.swing.JLabel();
        bcari_kader = new javax.swing.JButton();
        bhapus_kader = new javax.swing.JButton();
        bubah_kader = new javax.swing.JButton();
        btambah_kader = new javax.swing.JButton();
        bt_hapus = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_kader = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        TU_Kader = new javax.swing.JPanel();
        lkader = new javax.swing.JLabel();
        lkader_id = new javax.swing.JLabel();
        k_id = new javax.swing.JTextField();
        lkader_nik = new javax.swing.JLabel();
        k_nik = new javax.swing.JTextField();
        lkader_nama = new javax.swing.JLabel();
        k_nama = new javax.swing.JTextField();
        lkader_ttl = new javax.swing.JLabel();
        k_tl = new com.toedter.calendar.JDateChooser();
        lkader_telp = new javax.swing.JLabel();
        k_telp = new javax.swing.JTextField();
        lkader_status = new javax.swing.JLabel();
        raktif = new javax.swing.JRadioButton();
        rtidak = new javax.swing.JRadioButton();
        btnsimpan_kader = new javax.swing.JButton();
        btnubah_kader = new javax.swing.JButton();
        bt_batal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        setLayout(new java.awt.CardLayout());

        mainpanel.setLayout(new java.awt.CardLayout());

        dataKader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tcari_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tcari_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tcari_kaderActionPerformed(evt);
            }
        });
        tcari_kader.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tcari_kaderKeyReleased(evt);
            }
        });
        dataKader.add(tcari_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 294, 36));

        label_kader.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        label_kader.setText("DATA KADER");
        dataKader.add(label_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 187, 46));

        bcari_kader.setBackground(new java.awt.Color(242, 242, 242));
        bcari_kader.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        bcari_kader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/pngtree-search-flat-yellow-color-icon-seo-find-research-photo-image_19943406-removebg-preview (1).png"))); // NOI18N
        bcari_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 153)));
        bcari_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bcari_kaderActionPerformed(evt);
            }
        });
        dataKader.add(bcari_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 90, 40, 36));

        bhapus_kader.setBackground(new java.awt.Color(255, 0, 51));
        bhapus_kader.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        bhapus_kader.setForeground(new java.awt.Color(255, 255, 255));
        bhapus_kader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/images (1).png"))); // NOI18N
        bhapus_kader.setText("Hapus Data");
        bhapus_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        bhapus_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bhapus_kaderActionPerformed(evt);
            }
        });
        dataKader.add(bhapus_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 690, 170, 40));

        bubah_kader.setBackground(new java.awt.Color(255, 193, 7));
        bubah_kader.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        bubah_kader.setForeground(new java.awt.Color(255, 255, 255));
        bubah_kader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/282091.png"))); // NOI18N
        bubah_kader.setText("Ubah Data");
        bubah_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 193, 7)));
        bubah_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubah_kaderActionPerformed(evt);
            }
        });
        dataKader.add(bubah_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 690, 170, 40));

        btambah_kader.setBackground(new java.awt.Color(7, 155, 7));
        btambah_kader.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        btambah_kader.setForeground(new java.awt.Color(255, 255, 255));
        btambah_kader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/new_database-5122.png"))); // NOI18N
        btambah_kader.setText("Tambah Data");
        btambah_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51)));
        btambah_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btambah_kaderActionPerformed(evt);
            }
        });
        dataKader.add(btambah_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 690, 170, 40));

        bt_hapus.setText("Hapus Data");
        bt_hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_hapusActionPerformed(evt);
            }
        });
        dataKader.add(bt_hapus, new org.netbeans.lib.awtextra.AbsoluteConstraints(184, 1917, 172, 42));
        dataKader.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 840, 500, 130));

        jScrollPane1.setAutoscrolls(true);

        table_kader.setAutoCreateRowSorter(true);
        table_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        table_kader.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N
        table_kader.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID", "NIK", "NAMA", "TANGGAL LAHIR", "ALAMAT", "NO TELEPON"
            }
        ));
        table_kader.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        table_kader.setIntercellSpacing(new java.awt.Dimension(5, 10));
        table_kader.setRowHeight(25);
        table_kader.getTableHeader().setReorderingAllowed(false);
        table_kader.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_kaderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_kader);

        jScrollPane2.setViewportView(jScrollPane1);

        dataKader.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 1620, 530));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ombre-7419016_1280 (1).jpg"))); // NOI18N
        dataKader.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 2480, 1360));

        mainpanel.add(dataKader, "card2");

        TU_Kader.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lkader.setFont(new java.awt.Font("Segoe UI Black", 1, 24)); // NOI18N
        lkader.setText("DATA KADER");
        TU_Kader.add(lkader, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, 187, 46));

        lkader_id.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lkader_id.setText("ID");
        TU_Kader.add(lkader_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 120, 136, 30));

        k_id.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        k_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                k_idActionPerformed(evt);
            }
        });
        TU_Kader.add(k_id, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 110, 420, 50));

        lkader_nik.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lkader_nik.setText("NIK");
        TU_Kader.add(lkader_nik, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 200, 136, 30));

        k_nik.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TU_Kader.add(k_nik, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 190, 420, 50));

        lkader_nama.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lkader_nama.setText("Nama");
        TU_Kader.add(lkader_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, 136, 30));

        k_nama.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TU_Kader.add(k_nama, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 270, 420, 50));

        lkader_ttl.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lkader_ttl.setText("Tanggal Lahir");
        TU_Kader.add(lkader_ttl, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 360, 136, 30));
        TU_Kader.add(k_tl, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 350, 300, 50));

        lkader_telp.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lkader_telp.setText("No Telepon");
        TU_Kader.add(lkader_telp, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 440, 136, 30));

        k_telp.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        TU_Kader.add(k_telp, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 440, 420, 50));

        lkader_status.setFont(new java.awt.Font("Tahoma", 1, 17)); // NOI18N
        lkader_status.setText("Status");
        TU_Kader.add(lkader_status, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 510, 136, 30));

        raktif.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        raktif.setText("Aktif");
        TU_Kader.add(raktif, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 510, -1, -1));

        rtidak.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        rtidak.setText("Tidak Aktif");
        TU_Kader.add(rtidak, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 510, -1, -1));

        btnsimpan_kader.setBackground(new java.awt.Color(0, 0, 204));
        btnsimpan_kader.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnsimpan_kader.setForeground(new java.awt.Color(255, 255, 255));
        btnsimpan_kader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/images__2_-removebg-preview (1).png"))); // NOI18N
        btnsimpan_kader.setText("SIMPAN");
        btnsimpan_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 242, 242)));
        btnsimpan_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnsimpan_kaderActionPerformed(evt);
            }
        });
        TU_Kader.add(btnsimpan_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 570, 185, 40));

        btnubah_kader.setBackground(new java.awt.Color(0, 0, 204));
        btnubah_kader.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        btnubah_kader.setForeground(new java.awt.Color(255, 255, 255));
        btnubah_kader.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/282091.png"))); // NOI18N
        btnubah_kader.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));
        btnubah_kader.setLabel("UBAH");
        btnubah_kader.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnubah_kaderActionPerformed(evt);
            }
        });
        TU_Kader.add(btnubah_kader, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 570, 185, 40));

        bt_batal.setBackground(new java.awt.Color(204, 60, 37));
        bt_batal.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        bt_batal.setForeground(new java.awt.Color(255, 255, 255));
        bt_batal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/clear (1).png"))); // NOI18N
        bt_batal.setText("BATAL");
        bt_batal.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(242, 242, 242)));
        bt_batal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_batalActionPerformed(evt);
            }
        });
        TU_Kader.add(bt_batal, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 570, 185, 40));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ombre-7419016_1280 (1).jpg"))); // NOI18N
        TU_Kader.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-30, -70, -1, -1));

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/3169210-removebg-preview.png"))); // NOI18N
        TU_Kader.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(870, 120, -1, -1));

        mainpanel.add(TU_Kader, "card3");

        add(mainpanel, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void tcari_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tcari_kaderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tcari_kaderActionPerformed

    private void tcari_kaderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tcari_kaderKeyReleased
        // TODO add your handling code here:
        String findItem = tcari_kader.getText();
        try{
            String sql = "SELECT * FROM kader where `kd_kader` like '%" + findItem + "%' or `nik` like '%" + findItem + "%' or `nama` like '%" + findItem + "%' order by kd_kader asc";
            java.sql.Statement stat = conn.createStatement();
            ResultSet hasil = stat.executeQuery(sql);
            while (hasil.next()){
                tabmode.addRow(new Object[]{
                    hasil.getString(1),
                    hasil.getString(2),
                    hasil.getString(3),
                    hasil.getString(4),
                    hasil.getString(5),
                    hasil.getString(6),
                    hasil.getString(7)
                });
            }
            table_kader.setModel(tabmode);
        } catch (Exception e) {

        }
        datatable();
    }//GEN-LAST:event_tcari_kaderKeyReleased

    private void bcari_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bcari_kaderActionPerformed
        // TODO add your handling code here:
        String findItem = tcari_kader.getText();
    }//GEN-LAST:event_bcari_kaderActionPerformed

    private void bhapus_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bhapus_kaderActionPerformed
        if(!k_nik.getText().equals("") && !k_nik.getText().isEmpty()) {
            bhapus_kader.setEnabled(true);
            int ok = JOptionPane.showConfirmDialog(null, "hapus", " yakin ingin menghapus?", JOptionPane.YES_NO_OPTION);
            if (ok == 0){
                System.out.println(k_nik);
                String sql = "DELETE FROM kader WHERE kd_kader ='"+ k_id.getText() + "'" ;
                try {
                    PreparedStatement stat = conn.prepareStatement(sql);
                    stat.executeUpdate();
                    JOptionPane.showMessageDialog(null, "data berhasil dihapus");
                    kosong();
                    //                k_id.requestFocus();
                }catch(SQLException e){
                    JOptionPane.showMessageDialog(null, "data gagal dihapus"+ e);
                }
            }
            datatable();
        } else {
            bhapus_kader.setEnabled(false);
            JOptionPane.showMessageDialog(null, "tidak ada data yang dihapus");
        }
    }//GEN-LAST:event_bhapus_kaderActionPerformed

    private void bubah_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubah_kaderActionPerformed
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        mainpanel.add(TU_Kader);
        mainpanel.repaint();
        mainpanel.revalidate();
        btnubah_kader.setVisible(true);
        btnsimpan_kader.setVisible(false);
    }//GEN-LAST:event_bubah_kaderActionPerformed

    private void btambah_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btambah_kaderActionPerformed
        mainpanel.removeAll();
        mainpanel.repaint();
        mainpanel.revalidate();
        
        mainpanel.add(TU_Kader);
        mainpanel.repaint();
        mainpanel.revalidate();
        btnubah_kader.setVisible(false);
        btnsimpan_kader.setVisible(true);

        k_id.setEditable(false);
        Random rand = new Random();
        Integer random = rand.nextInt(100000);
        k_id.setText(random.toString());
    }//GEN-LAST:event_btambah_kaderActionPerformed

    private void bt_hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_hapusActionPerformed
        int ok = JOptionPane.showConfirmDialog(null, "hapus", " yakin ingin menghapus?", JOptionPane.YES_NO_OPTION);
        if (ok == 0){
            System.out.println(k_nik);
            String sql = "DELETE FROM kader WHERE kd_kader ="+ k_nik.getText() ;
            try {
                PreparedStatement stat = conn.prepareStatement(sql);
                stat.executeUpdate();
                JOptionPane.showMessageDialog(null, "data berhasil dihapus");
                kosong();
            }catch(SQLException e){
                JOptionPane.showMessageDialog(null, "data gagal dihapus"+ e);
            }
        }
        datatable();
    }//GEN-LAST:event_bt_hapusActionPerformed

    private void k_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_k_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_k_idActionPerformed

    private void btnsimpan_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnsimpan_kaderActionPerformed
       
        String status="";
        if(raktif.isSelected()) {
            status="Aktif";
            rtidak.setSelected(false);
        }
        else {
            status="Tidak Aktif";
            raktif.setSelected(false);
        }

        if(!k_nik.getText().equals("") && !k_nik.getText().equals("") && !k_nama.getText().equals("") && !status.equals("") && !k_telp.equals("") && !k_tl.getDate().equals(null)) {
            String tampilan = "yyyy-MM-dd";
            SimpleDateFormat fm = new SimpleDateFormat(tampilan);
            String Kttl = String.valueOf(fm.format(k_tl.getDate()));
            try {
                String sqlnik = "SELECT nik from kader where nik=" + k_nik.getText();
                java.sql.Statement statnik = conn.createStatement();
                ResultSet hasil = statnik.executeQuery(sqlnik);
                if(!hasil.isBeforeFirst()) {
                    String sql = "INSERT INTO kader values (?,?,?,?,?,?)";
                    PreparedStatement stat = conn.prepareStatement(sql);
                    stat.setString(1, k_id.getText());
                    stat.setString(2, k_nik.getText());
                    stat.setString(3, k_nama.getText());
                    stat.setString(4, Kttl);
                    stat.setString(5, k_telp.getText());
                    stat.setString(6, status);

                    stat.executeUpdate();
                    JOptionPane.showMessageDialog(null, "data berhasil disimpan");
                    mainpanel.removeAll();
                    mainpanel.add(dataKader);
                    mainpanel.repaint();
                    mainpanel.revalidate();

                } else {
                    JOptionPane.showMessageDialog(null, "NIK yang diinput sudah terdaftar!");
                    k_nik.setText("");
                }
            } catch (SQLException e){
                JOptionPane.showMessageDialog(null, "data gagal disimpan "+e);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Isi semua kolom yang tersedia!");
        }
        datatable();
    }//GEN-LAST:event_btnsimpan_kaderActionPerformed

    private void btnubah_kaderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnubah_kaderActionPerformed
        // TODO add your handling code here:
      try{
            String tampilan = "yyyy-MM-dd";
            SimpleDateFormat fm = new SimpleDateFormat(tampilan);
            String Kttl = String.valueOf(fm.format(k_tl.getDate()));
            String status="";
            if(raktif.isSelected()) status="Aktif";
            else status="Tidak Aktif";
            //            String ibu = k_ibu.getSelectedItem().toString();
            System.out.println(Kttl);
            String sql = "UPDATE kader set `nik`=?, `nama`=?, `tgl_lahir`=?, `no_telp`=?, `status`=? WHERE `kd_kader`=" + k_id.getText();
            PreparedStatement stat = conn.prepareStatement(sql);
            stat.setString(1, k_nik.getText());
            stat.setString(2, k_nama.getText());
            stat.setString(3, Kttl);
            stat.setString(5, status);
            stat.setString(4, k_telp.getText());
            stat.executeUpdate();
            JOptionPane.showMessageDialog(null, "DATA BERHASIL DIUBAH");
            mainpanel.removeAll();
            mainpanel.add(dataKader);
            mainpanel.repaint();
            mainpanel.revalidate();
            datatable();
            kosong();
            //   k_id.requestFocus();

        }catch(SQLException e){
            JOptionPane.showMessageDialog(null, "data gagal diubah"+ e);
        }
    }//GEN-LAST:event_btnubah_kaderActionPerformed

    private void bt_batalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_batalActionPerformed
        mainpanel.removeAll();
        mainpanel.add(dataKader);
        mainpanel.repaint();
        mainpanel.revalidate();
        kosong();
        datatable();
    }//GEN-LAST:event_bt_batalActionPerformed

    private void table_kaderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_kaderMouseClicked

       
        int bar = table_kader.getSelectedRow();
        String a = tabmode.getValueAt (bar, 0).toString();
        String b = tabmode.getValueAt (bar, 1).toString();
        String c = tabmode.getValueAt (bar, 2).toString();
        String d = tabmode.getValueAt (bar, 3).toString();
        String e = tabmode.getValueAt (bar, 4).toString();
        String f = tabmode.getValueAt (bar, 5).toString();

        SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
        try {
            java.util.Date date = formatter.parse(d);
            k_tl.setDate(date);

            //        java.util.Date date = formater.parse(b);
        } catch (ParseException ex) {
            Logger.getLogger(kader.class.getName()).log(Level.SEVERE, null, ex);
        }

        if(f.equals("Aktif")) {raktif.setSelected(true); rtidak.setSelected(false);}
        else {raktif.setSelected(false); rtidak.setSelected(true);}
        k_id.setText(a);
        k_nik.setText(b);
        k_nama.setText(c);
        k_telp.setText(e);

        bhapus_kader.setEnabled(true);
    }//GEN-LAST:event_table_kaderMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel TU_Kader;
    private javax.swing.JButton bcari_kader;
    private javax.swing.JButton bhapus_kader;
    private javax.swing.JButton bt_batal;
    private javax.swing.JButton bt_hapus;
    private javax.swing.JButton btambah_kader;
    private javax.swing.JButton btnsimpan_kader;
    private javax.swing.JButton btnubah_kader;
    private javax.swing.JButton bubah_kader;
    private javax.swing.JPanel dataKader;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField k_id;
    private javax.swing.JTextField k_nama;
    private javax.swing.JTextField k_nik;
    private javax.swing.JTextField k_telp;
    private com.toedter.calendar.JDateChooser k_tl;
    private javax.swing.JLabel label_kader;
    private javax.swing.JLabel lkader;
    private javax.swing.JLabel lkader_id;
    private javax.swing.JLabel lkader_nama;
    private javax.swing.JLabel lkader_nik;
    private javax.swing.JLabel lkader_status;
    private javax.swing.JLabel lkader_telp;
    private javax.swing.JLabel lkader_ttl;
    private javax.swing.JPanel mainpanel;
    private javax.swing.JRadioButton raktif;
    private javax.swing.JRadioButton rtidak;
    private javax.swing.JTable table_kader;
    private javax.swing.JTextField tcari_kader;
    // End of variables declaration//GEN-END:variables
}
